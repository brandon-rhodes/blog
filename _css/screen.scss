@import "_normalize";
@import "compass/css3/box-shadow";
@import "compass/css3/text-shadow";
@import "compass/typography/vertical_rhythm";

* { box-sizing: border-box }  /* Paul Irish */

$pagebg: #e2daaf;
$contentbg: #f7f4e4;
$sidebarbg: #bb9d69;
$headertxt: #75402f;
$titletxt: #700;

body {
  background: $pagebg url('/brandon/sidebar.jpg') repeat-y center top;
  padding-top: 1.5em;
  font-family: 'Crimson Text', serif;
  @media screen and (min-width: 400px) {@include adjust-font-size-to(18px);}
  @media screen and (min-width: 480px) {background-position: right top;}
  @media screen and (min-width: 660px) {background-position: 90% top;}
  @media screen and (min-width: 780px) {background-position: 80% top;}
  @media screen and (min-width: 960px) {background-position: 70% top;}
}

header {
  position: absolute;
  top: 0px;
  left: 1%;
  right: 1%;
  padding-top: 0.8em;
  text-align: center;
  font-family: 'Gentium Book Basic', serif;

  @media screen and (min-width: 480px) {left: auto; right: 20%;}
  @media screen and (min-width: 960px) {right: 27.5%;}

  a.site-title {
    display: block;
    color: $headertxt;
    text-decoration: none;
  }
  span.title {
    @include text-shadow(0px 1px 0px lighten($sidebarbg, 30%), 0px -1px 0px #000);
    /* TODO: body.index & {font-size: 1.5em;} */
  }
  span {
    display: block;
    white-space: nowrap;
  }
  .author:before {
    content: "by ";
  }
  img {
    height: 24px;
    width: 24px;
  }
}

footer {
  line-height: 1em;
  text-align: center;
  @media screen and (min-width: 560px) {margin-left: 20%;}
}

@mixin main-content {
  margin: 2.5em auto;
  max-width: 32em;
  padding: 0.8em 5%;
}

.scraps {
  @include main-content;
  > div {
    /* float: left; */
  }
  &:after {
    clear: both;
    content: "Â ";
  }
}

body.index {
  .social-media {
    .media {
      text-align: center;
      > div {
        display: inline-block;
        vertical-align: top;
      }
    }
  }
}

body.chronological article {
  /* Narrow screens: date, title, and summary are simply stacked
     vertically. To help the dates stand out we provide a little more
     space above them, and make them italic. */
  h2, p {
    margin: 0.5em 0em;
    font-size: 1em;
  }
  .date2 {
    margin-top: 1.2em;
    font-style: italic;
    word-spacing: 0.18em;
  }
  @media screen and (min-width: 490px) {
    /* Wide screens: float the date left, into a separate column. With the
       date providing a visual cue, the vertical separation between items
       can be reduced to 1em, and the date no longer has to be italic. */
    h2, p {
      margin: 1em 0em 1em 6em;
    }
    .date2 {
      float: left;
      margin: 0em;
      font-style: normal;
    }
  }
}

article {
  @include main-content;
  @include box-shadow(2px 2px 7px #000);
  background-color: $contentbg;

  .date {
    margin-top: 0.8em;
    text-align: center;
    color: $sidebarbg;
    a {color: $sidebarbg;}
  }
  h1 {
    margin-top: 0px;
    border-top: 1px solid $titletxt;
    color: $titletxt;
    text-align: center;
    line-height: 1em;
    font-weight: normal;
  }
  h2 {
    color: $titletxt;
    font-weight: normal;
  }
  blockquote, .caption {
    color: darken($contentbg, 70%);
  }
  .caption {
    display: block;
    text-align: center;
    margin: 0.3em 10%;
    padding-top: 1em;
  }
  blockquote {
    border-top: 1px solid darken($contentbg, 10%);
    border-bottom: 1px solid darken($contentbg, 10%);
    padding: 0.3em 0em;
  }
  div.warning {
    border-top: 4px solid darken(red, 20);
    border-bottom: 4px solid darken(red, 20);
    /* background-color: lighten(red, 43%); */
    padding: 0.3em 1em;
    color: darken(red, 20%);
    p {
        margin: 0.5em 0;
    }
    .admonition-title {
        text-align: center;
        font-weight: bold;
    }
  }
  ul {
    padding-left: 1em;
    @media screen and (min-width: 480px) {
      padding-left: 1.5em;
    }
  }
  li {
    margin-top: 1em;
    margin-bottom: 1em;
  }
  dt {
    margin-top: 1em;
    margin-bottom: 0.3em;
  }
  img, iframe {
    max-width: 100%;
  }
  tt, code {
    color: $titletxt;
    @include adjust-font-size-to(16px, 1, 18px);
    a {color: $titletxt;}
  }
  img, .image-reference {
    display: block;
    margin: 0.2em auto 1em;
    max-width: 100%;
  }
  img.inline {
    display: inline;
  }
  .image-reference {
    text-align: center;
    @media screen and (min-width: 560px) {
      float: right;
      margin-left: 1em;
      margin-bottom: 1em;
    }
    img {
      @include box-shadow(2px 2px 7px darken($contentbg, 70%));
      border-width: 1px 2px 2px 1px;
      border-style: solid;
      border-color: darken($contentbg, 50%) darken($contentbg, 70%) darken($contentbg, 70%) darken($contentbg, 50%);
    }
  }
  &:after {
    display: block;
    clear: both;
    height: 0px;
    width: 0px;
    content: " ";
  }
}

.blog-summary {
  a {
    color: darken($titletxt, 5%);
    text-decoration: none;
    &:hover {text-decoration: underline;}
  }
}

pre {
  @include box-shadow(0px 0px 7px #640);
  background-color: white;
  padding: 0.3em 0.5em;
  width: 40em;  /* nearly 80 characters with Inconsolata */
  @include adjust-font-size-to(14px, 0.75, 18px);
  font-family: "Inconsolata", "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", Monaco, Courier, monospace, sans-serif;
  white-space: pre;
}

body .pygments_autumn .nc, body .pygments_autumn .nn{
  text-decoration: none;
}
body .pygments_autumn .err {
    color: inherit;
    background: none;
}

.mouseover-image-stack {
    position: relative;
    img {
        margin: 0;
    }
    img:last-child {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
    }
    &:hover img:last-child {
        display: block;
    }
}

/* Variation of https://github.com/john2x/solarized-pygment */

$pdark: 20;

.pygments_murphy {
.hll { background-color: #ffffcc }
background: #eee8d5; color: darken(#586e75, $pdark);
.c { color: darken(#93a1a1, $pdark); font-style: italic } /* Comment */
.g { color: darken(#d33682, $pdark) } /* Generic */
.k { color: darken(#859900, $pdark) } /* Keyword */
.l { color: darken(#2aa198, $pdark) } /* Literal */
.n { color: darken(#268bd2, $pdark) } /* Name */
.cm { color: darken(#93a1a1, $pdark); font-style: italic } /* Comment.Multiline */
.cp { color: darken(#93a1a1, $pdark); font-style: italic } /* Comment.Preproc */
.c1 { color: darken(#93a1a1, $pdark); font-style: italic } /* Comment.Single */
.cs { color: darken(#93a1a1, $pdark); font-style: italic } /* Comment.Special */
.gd { color: darken(#d33682, $pdark) } /* Generic.Deleted */
.ge { color: darken(#d33682, $pdark) } /* Generic.Emph */
.gr { color: darken(#d33682, $pdark) } /* Generic.Error */
.gh { color: darken(#d33682, $pdark) } /* Generic.Heading */
.gi { color: darken(#d33682, $pdark) } /* Generic.Inserted */
.go { color: darken(#d33682, $pdark) } /* Generic.Output */
.gp { color: darken(#d33682, $pdark) } /* Generic.Prompt */
.gs { color: darken(#d33682, $pdark) } /* Generic.Strong */
.gu { color: darken(#d33682, $pdark) } /* Generic.Subheading */
.gt { color: darken(#d33682, $pdark) } /* Generic.Traceback */
.kc { color: darken(#859900, $pdark); font-weight: bold } /* Keyword.Constant */
.kd { color: darken(#859900, $pdark) } /* Keyword.Declaration */
.kn { color: darken(#dc322f, $pdark); font-weight: bold } /* Keyword.Namespace */
.kp { color: darken(#859900, $pdark) } /* Keyword.Pseudo */
.kr { color: darken(#859900, $pdark) } /* Keyword.Reserved */
.kt { color: darken(#859900, $pdark); font-weight: bold } /* Keyword.Type */
.ld { color: darken(#2aa198, $pdark) } /* Literal.Date */
.m { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number */
.s { color: darken(#2aa198, $pdark) } /* Literal.String */
.na { color: darken(#268bd2, $pdark) } /* Name.Attribute */
.nb { color: darken(#cb4b16, $pdark) } /* Name.Builtin */
.nc { color: darken(#cb4b16, $pdark) } /* Name.Class */
.no { color: darken(#268bd2, $pdark) } /* Name.Constant */
.nd { color: darken(#268bd2, $pdark) } /* Name.Decorator */
.ni { color: darken(#268bd2, $pdark) } /* Name.Entity */
.ne { color: darken(#268bd2, $pdark) } /* Name.Exception */
.nf { color: darken(#268bd2, $pdark) } /* Name.Function */
.nl { color: darken(#268bd2, $pdark) } /* Name.Label */
.nn { color: darken(#268bd2, $pdark) } /* Name.Namespace */
.nx { color: darken(#268bd2, $pdark) } /* Name.Other */
.py { color: darken(#268bd2, $pdark) } /* Name.Property */
.nt { color: darken(#268bd2, $pdark); font-weight: bold } /* Name.Tag */
.nv { color: darken(#268bd2, $pdark) } /* Name.Variable */
.ow { color: darken(#859900, $pdark) } /* Operator.Word */
.w { color: darken(#586e75, $pdark) } /* Text.Whitespace */
.mf { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number.Float */
.mh { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number.Hex */
.mi { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number.Integer */
.mo { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number.Oct */
.sb { color: darken(#2aa198, $pdark) } /* Literal.String.Backtick */
.sc { color: darken(#2aa198, $pdark) } /* Literal.String.Char */
.sd { color: darken(#2aa198, $pdark) } /* Literal.String.Doc */
.s2 { color: darken(#2aa198, $pdark) } /* Literal.String.Double */
.se { color: darken(#2aa198, $pdark) } /* Literal.String.Escape */
.sh { color: darken(#2aa198, $pdark) } /* Literal.String.Heredoc */
.si { color: darken(#2aa198, $pdark) } /* Literal.String.Interpol */
.sx { color: darken(#2aa198, $pdark) } /* Literal.String.Other */
.sr { color: darken(#2aa198, $pdark) } /* Literal.String.Regex */
.s1 { color: darken(#2aa198, $pdark) } /* Literal.String.Single */
.ss { color: darken(#2aa198, $pdark) } /* Literal.String.Symbol */
.bp { color: darken(#cb4b16, $pdark) } /* Name.Builtin.Pseudo */
.vc { color: darken(#268bd2, $pdark) } /* Name.Variable.Class */
.vg { color: darken(#268bd2, $pdark) } /* Name.Variable.Global */
.vi { color: darken(#268bd2, $pdark) } /* Name.Variable.Instance */
.il { color: darken(#2aa198, $pdark); font-weight: bold } /* Literal.Number.Integer.Long */
}
